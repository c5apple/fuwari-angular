/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './articles.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './articles.component.scss.shim';
import * as import10 from '@angular/router/src/directives/router_outlet';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../../node_modules/@angular/router/src/directives/router_outlet.ngfactory';
import * as import13 from '@angular/router/src/router_outlet_map';
import * as import14 from '@angular/core/src/linker/component_factory_resolver';
export class Wrapper_ArticlesComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ArticlesComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.ArticlesComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_ArticlesComponent_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.ArticlesComponent],import0.ArticlesComponent,{})];
var renderType_ArticlesComponent_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ArticlesComponent_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ArticlesComponent>;
  _ArticlesComponent_0_3:Wrapper_ArticlesComponent;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ArticlesComponent_Host0,renderType_ArticlesComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ArticlesComponent_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'app-articles',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_ArticlesComponent0(this.viewUtils,this,0,this._el_0);
    this._ArticlesComponent_0_3 = new Wrapper_ArticlesComponent();
    this.compView_0.create(this._ArticlesComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ArticlesComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ArticlesComponent) && (0 === requestNodeIndex))) { return this._ArticlesComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._ArticlesComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ArticlesComponentNgFactory:import8.ComponentFactory<import0.ArticlesComponent> = new import8.ComponentFactory<import0.ArticlesComponent>('app-articles',View_ArticlesComponent_Host0,import0.ArticlesComponent);
const styles_ArticlesComponent:any[] = [import9.styles];
const nodeDebugInfos_ArticlesComponent0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import10.RouterOutlet],(null as any),{})];
var renderType_ArticlesComponent:import3.RenderComponentType = import4.createRenderComponentType('C:/fuwari-angular/src/app/articles/articles.component.html',0,import5.ViewEncapsulation.Emulated,styles_ArticlesComponent,{});
export class View_ArticlesComponent0 extends import1.DebugAppView<import0.ArticlesComponent> {
  _el_0:any;
  /*private*/ _vc_0:import11.ViewContainer;
  _RouterOutlet_0_5:import12.Wrapper_RouterOutlet;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ArticlesComponent0,renderType_ArticlesComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ArticlesComponent0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import4.createRenderElement(this.renderer,parentRenderNode,'router-outlet',import4.EMPTY_INLINE_ARRAY,this.debug(0,0,0));
    this._vc_0 = new import11.ViewContainer(0,(null as any),this,this._el_0);
    this._RouterOutlet_0_5 = new import12.Wrapper_RouterOutlet(this.parentView.injectorGet(import13.RouterOutletMap,this.parentIndex),this._vc_0.vcRef,this.parentView.injectorGet(import14.ComponentFactoryResolver,this.parentIndex),(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.RouterOutlet) && (0 === requestNodeIndex))) { return this._RouterOutlet_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._RouterOutlet_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._RouterOutlet_0_5.ngOnDestroy();
  }
}